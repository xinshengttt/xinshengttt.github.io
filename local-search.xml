<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySq系统数据库：information_schema</title>
    <link href="/2024/04/13/MySq%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9Ainformation-schema/"/>
    <url>/2024/04/13/MySq%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9Ainformation-schema/</url>
    
    <content type="html"><![CDATA[<h3 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h3><p>information_schema：mysql自带的数据库，用于存储数据库元数据，例如数据库名、表名、列的数据类型、访问权限等。通过查询information_schema中的视图和表，用户可以获取数据库架构的详细信息，以便进行元数据管理、数据字典生成、权限管理等。</p><h4 id="数据库的部分表结构"><a href="#数据库的部分表结构" class="headerlink" title="数据库的部分表结构"></a>数据库的部分表结构</h4><h5 id="information-schema-tables"><a href="#information-schema-tables" class="headerlink" title="information_schema.tables"></a>information_schema.tables</h5><p>表示查询数据库information_schema的表tables。</p><p>tables：information_schema的一张表，用于存储数据库的表信息，包括表属于哪个数据库、表的名称、表的类型、创建时间、存储引擎。</p><h5 id="information-schema-columns"><a href="#information-schema-columns" class="headerlink" title="information_schema.columns"></a>information_schema.columns</h5><p>information_schema.columns: 数据库information_schema的表columns，存储了关于数据库中所有表的列的信息。</p><p>下面来看一段mysql代码：</p><figure><div class="code-wrapper"><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select column_name,                   (case when (is_nullable &#x3D; &#39;no&#39; &lt;![CDATA[ &amp;&amp; ]]&gt; column_key !&#x3D; &#39;PRI&#39;) then &#39;1&#39; else &#39;0&#39; end) as is_required,                   (case when column_key &#x3D; &#39;PRI&#39; then &#39;1&#39; else &#39;0&#39; end) as is_pk,                   ordinal_position as sort,                   column_comment,                   (case when extra &#x3D; &#39;auto_increment&#39; then &#39;1&#39; else &#39;0&#39; end) as is_increment,                   column_type            from information_schema.columns where table_schema &#x3D; (select database()) and table_name &#x3D; (#&#123;tableName&#125;)            order by ordinal_position<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h6 id="解释字段："><a href="#解释字段：" class="headerlink" title="解释字段："></a>解释字段：</h6><p>is_nulable: 如果列有关键字NOT NULL修饰，则结果为no，表示不能为空，反之则为yes.</p><p>column_key: 判断列是否为主键，是则显示’PRI’.</p><p>ordinal_position: 排列顺序</p><p>column_comment: 列注释</p><p>extra: 额外信息</p><p>column_type: 列类型</p><p><img src="/img/MySq%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9Ainformation_schema/1.png"></p><p>select database()：查询当前使用的是哪个数据库</p><p>case when: 这是在sql中启动了一个条件语句，如果条件成立，则执行then语句内容，否则实行else语句内容。</p><p><code>&lt;![CDATA[ &amp;&amp; ]]&gt;</code>: 目的是为了让XML解析器让将’&amp;&amp;’视为纯文本而不是XML标记。</p>]]></content>
    
    
    <categories>
      
      <category>MySql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ruoyi-vue-plus</tag>
      
      <tag>MySql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Velocity模板引擎和模板语法基础</title>
    <link href="/2024/04/11/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    <url>/2024/04/11/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h3 id="1-Velocity简介"><a href="#1-Velocity简介" class="headerlink" title="1.Velocity简介"></a>1.Velocity简介</h3><p>Velocity是一个基于Java的<a href="https://so.csdn.net/so/search?q=%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E&spm=1001.2101.3001.7020">模板引擎</a>，可以通过特定的语法获取在java对象的数据 , 填充到模板中，从而实现界面和java代码的分离 !</p><h3 id="2-Velocity使用"><a href="#2-Velocity使用" class="headerlink" title="2.Velocity使用"></a>2.Velocity使用</h3><h4 id="2-1添加依赖"><a href="#2-1添加依赖" class="headerlink" title="2.1添加依赖"></a>2.1添加依赖</h4><p>在使用Velocity之前，我们要在pom.xml文件引入依赖</p><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> velocity代码生成使用模板 <span class="token operator">--</span><span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">></span></span>                <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>velocity<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>velocity<span class="token operator">-</span>engine<span class="token operator">-</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span>$<span class="token punctuation">&#123;</span>velocity<span class="token punctuation">.</span>version<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="2-2在java代码中使用Velocity"><a href="#2-2在java代码中使用Velocity" class="headerlink" title="2.2在java代码中使用Velocity"></a>2.2在java代码中使用Velocity</h4><p>使用步骤：</p><p>​1.设置velocity资源加载器</p><p>​2.创建velocity容器</p><p>​3.加载模板</p><p>​4.合并数据到模板</p><p>​5.释放资源</p><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @author Becant * 2024-04-11-23:07 * @version 1.0.0 * velocity测试 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VelocityTest</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//1.设置velocity资源加载器</span>        <span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"file.resource.loader.class"</span><span class="token punctuation">,</span> <span class="token string">"org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Velocity</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2.创建velocity容器</span>        <span class="token class-name">VelocityContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VelocityContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SysUser</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"names"</span><span class="token punctuation">,</span> <span class="token string">"张三、李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.加载模板</span>        <span class="token class-name">Template</span> template <span class="token operator">=</span> <span class="token class-name">Velocity</span><span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token string">"vm/index.vm"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span><span class="token string">"E:\\javaproject\\ruoyi-vue-plus-4x\\ruoyi-demo\\src\\main\\resources\\vm\\index.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.合并数据到模板</span>        template<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> writer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.释放资源</span>        writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>需要注意的是要在resources中创建如下文件</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/1.png"></p><p>context.put(“name”, “张三”); 这段代码表示在上下文中设置了name变量，值为张三。这样就可以从index.vm中获得name变量的值。</p><p>运行VelocityTest后，就生成了index.html文件。index.html文件是index.vm文件的解析。</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/2.png"></p><p>接着，就开始解析index.vm文件的内容</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/3.png"></p><p>解析之后，在index.html中显示</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/4.png"></p><p>$name 就代表获取变量name，还可以这样表示${name}。两者的区别是：当需要拼接某个字符串(如 abc)时，$name就变成了$nameabc会形成一个新的变量;而${name}则变成${name}abc.</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/5.png"></p><p>从上图我们可以知道，如果一个变量不存在，则不会被解析。那么当解析时，如何让一个不存在的变量不显示的呢，只需在前边加上!</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/6.png"></p><h4 id="2-3Velocity基础语法的使用"><a href="#2-3Velocity基础语法的使用" class="headerlink" title="2.3Velocity基础语法的使用"></a>2.3Velocity基础语法的使用</h4><h5 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h5><p>注释有三种使用方法:</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/16.png"></p><h5 id="非解析内容"><a href="#非解析内容" class="headerlink" title="非解析内容"></a>非解析内容</h5><p>如果我们想使用$name这个字符串而不进行解析，可以这样实现：#[[$name]]#</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/17.png"></p><h5 id="属性引用以及方法引用"><a href="#属性引用以及方法引用" class="headerlink" title="属性引用以及方法引用"></a>属性引用以及方法引用</h5><p>user.userName即是从上下文中设置的user的一个属性值。names.split(“、”)，分割，与java中的split()方法类似，names也是从上下文中设置的。</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/7.png"></p><h5 id="在index-vm中定义变量"><a href="#在index-vm中定义变量" class="headerlink" title="在index.vm中定义变量"></a>在index.vm中定义变量</h5><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/8.png"></p><h5 id="逻辑判断"><a href="#逻辑判断" class="headerlink" title="逻辑判断"></a>逻辑判断</h5><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/9.png"></p><h5 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h5><p>#foreach($a in $arr)与java中 for(ArrayList a : arr)类似</p><p>使用$foreach.index，索引值从0开始，使用$foreach.count，索引值从1开始</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/10.png"></p><h5 id="引入资源"><a href="#引入资源" class="headerlink" title="引入资源"></a>引入资源</h5><p>A引入B：即把B的所有内容代码放到A执行</p><h6 id="1-通过-include-引入模板"><a href="#1-通过-include-引入模板" class="headerlink" title="1.通过#include()引入模板"></a>1.通过#include()引入模板</h6><p>通过#include()引入模板不会进行解析。例如在vm&#x2F;index.vm中引入vm&#x2F;index2.vm，即#include(“vm&#x2F;index2.vm”)，但不能对vm&#x2F;index2.vm解析。</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/11.png"></p><h6 id="2-通过-parse-引入模板"><a href="#2-通过-parse-引入模板" class="headerlink" title="2.通过#parse()引入模板"></a>2.通过#parse()引入模板</h6><p>通过#parse()引入模板则会进行解析。</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/12.png"></p><h5 id="声明模块"><a href="#声明模块" class="headerlink" title="声明模块"></a>声明模块</h5><p>声明模块有点类似java中的方法，但是模块内声明的变量，在模块外也可以使用。</p><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/13.png"></p><h5 id="动态计算指令"><a href="#动态计算指令" class="headerlink" title="动态计算指令"></a>动态计算指令</h5><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/14.png"></p><h5 id="定义宏指令"><a href="#定义宏指令" class="headerlink" title="定义宏指令"></a>定义宏指令</h5><p><img src="/img/Velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E5%92%8C%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/15.png"></p><p>如果本文出现错误或有歧义，劳烦大家指出，谢谢！</p><p>本文到此结束！</p>]]></content>
    
    
    <categories>
      
      <category>Velocity</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Velocity</tag>
      
      <tag>ruoyi-vue-plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
